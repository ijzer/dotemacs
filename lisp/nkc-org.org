#+TITLE: Org Settings

* Setup
** Packages
#+BEGIN_SRC emacs-lisp
  (require 'use-package)

  (use-package org)
#+END_SRC
* Org Bable
  I use org bable basically all the time. Here's some stuff that makes
  that not a nightmare.
** Open source code editing buffer in same window
#+BEGIN_SRC emacs-lisp
  (setq org-src-window-setup 'current-window)
#+END_SRC
** Default header args
   The important ones here are starred and are changed from the
   defaults. The rest are p much just there so I can see them all in
   one place. 
#+BEGIN_SRC emacs-lisp
    (setq org-babel-default-header-args '((:session . "none")
                                         (:results . "value drawer silent")
                                         (:exports . "code")
                                         (:cache . "no")
                                         (:noweb . "no-export") ;***
                                         (:hlines . "no")
                                         (:tangle . "yes") ;***
                                         (:comments . "both"))) ;***
#+END_SRC
** Tangle certain org files on save
#+BEGIN_SRC emacs-lisp
  (defsubst funcs-into-hook (hook &rest func-list)
    (dolist (func func-list) (add-hook hook func)))

  (add-hook 'after-save-hook (lambda () (when (string-match
                                          (rx
                                           bos
                                           (+ not-newline)
                                           "/.emacs.d/"
                                           (+ not-newline)
                                           ".org")
                                          buffer-file-name)
                                     (org-babel-tangle))))
#+END_SRC
** Use eldoc with org files
#+BEGIN_SRC emacs-lisp
  (remove-hook 'org-mode-hook #'org-eldoc-load)
  (remove-hook 'org-mode-hook #'eldoc-mode)
#+END_SRC
** Don't ask for confirmation on evaluates
#+BEGIN_SRC emacs-lisp
  (setq org-confirm-babel-evaluate (lambda (lang body)
				     (cond
				      ((string= lang "emacs-lisp") nil)
				      (t t))))
#+END_SRC
* Provide
#+BEGIN_SRC emacs-lisp
  (provide 'nkc-org)
#+END_SRC
